--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityPiston.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityPiston.java
@@ -145,56 +145,45 @@
 
             if (!list1.isEmpty())
             {
-                boolean flag = this.pistonState.getBlock() == Blocks.SLIME_BLOCK;
+                boolean flag = this.pistonState.getBlock().isStickyBlock(this.pistonState);
 
-                for (int i = 0; i < list1.size(); ++i)
-                {
-                    Entity entity = list1.get(i);
-
-                    if (entity.getPushReaction() != EnumPushReaction.IGNORE)
-                    {
-                        if (flag)
-                        {
-                            switch (enumfacing.getAxis())
-                            {
+                for (Entity entity : list1) {
+                    if (entity.getPushReaction() != EnumPushReaction.IGNORE) {
+                        if (flag) {
+                            switch (enumfacing.getAxis()) {
                                 case X:
-                                    entity.motionX = (double)enumfacing.getFrontOffsetX();
+                                    entity.motionX = (double) enumfacing.getFrontOffsetX();
                                     break;
                                 case Y:
-                                    entity.motionY = (double)enumfacing.getFrontOffsetY();
+                                    entity.motionY = (double) enumfacing.getFrontOffsetY();
                                     break;
                                 case Z:
-                                    entity.motionZ = (double)enumfacing.getFrontOffsetZ();
+                                    entity.motionZ = (double) enumfacing.getFrontOffsetZ();
                             }
                         }
 
                         double d1 = 0.0D;
 
-                        for (int j = 0; j < list.size(); ++j)
-                        {
-                            AxisAlignedBB axisalignedbb1 = this.getMovementArea(this.moveByPositionAndProgress(list.get(j)), enumfacing, d0);
+                        for (AxisAlignedBB axisAlignedBB : list) {
+                            AxisAlignedBB axisalignedbb1 = this.getMovementArea(this.moveByPositionAndProgress(axisAlignedBB), enumfacing, d0);
                             AxisAlignedBB axisalignedbb2 = entity.getEntityBoundingBox();
 
-                            if (axisalignedbb1.intersects(axisalignedbb2))
-                            {
+                            if (axisalignedbb1.intersects(axisalignedbb2)) {
                                 d1 = Math.max(d1, this.getMovement(axisalignedbb1, enumfacing, axisalignedbb2));
 
-                                if (d1 >= d0)
-                                {
+                                if (d1 >= d0) {
                                     break;
                                 }
                             }
                         }
 
-                        if (d1 > 0.0D)
-                        {
+                        if (d1 > 0.0D) {
                             d1 = Math.min(d1, d0) + 0.01D;
                             MOVING_ENTITY.set(enumfacing);
-                            entity.move(MoverType.PISTON, d1 * (double)enumfacing.getFrontOffsetX(), d1 * (double)enumfacing.getFrontOffsetY(), d1 * (double)enumfacing.getFrontOffsetZ());
+                            entity.move(MoverType.PISTON, d1 * (double) enumfacing.getFrontOffsetX(), d1 * (double) enumfacing.getFrontOffsetY(), d1 * (double) enumfacing.getFrontOffsetZ());
                             MOVING_ENTITY.set(null);
 
-                            if (!this.extending && this.shouldHeadBeRendered)
-                            {
+                            if (!this.extending && this.shouldHeadBeRendered) {
                                 this.fixEntityWithinPistonBase(entity, enumfacing, d0);
                             }
                         }

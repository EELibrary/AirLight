--- ../src-base/minecraft/net/minecraft/entity/ai/attributes/AbstractAttributeMap.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/attributes/AbstractAttributeMap.java
@@ -4,15 +4,17 @@
 import com.google.common.collect.Maps;
 import com.google.common.collect.Multimap;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Map;
 import java.util.Map.Entry;
+import java.util.concurrent.ConcurrentHashMap;
 import javax.annotation.Nullable;
 import net.minecraft.util.LowerStringMap;
 
 public abstract class AbstractAttributeMap
 {
-    protected final Map<IAttribute, IAttributeInstance> attributes = Maps.<IAttribute, IAttributeInstance>newHashMap();
-    protected final Map<String, IAttributeInstance> attributesByName = new LowerStringMap();
+    protected final Map<IAttribute, IAttributeInstance> attributes = new ConcurrentHashMap<>(); //AirLight thread safe
+    protected final Map<String, IAttributeInstance> attributesByName = Collections.synchronizedMap(new LowerStringMap());
     protected final Multimap<IAttribute, IAttribute> descendantsByParent = HashMultimap.<IAttribute, IAttribute>create();
 
     public IAttributeInstance getAttributeInstance(IAttribute attribute)
@@ -40,7 +42,9 @@
 
             for (IAttribute iattribute = attribute.getParent(); iattribute != null; iattribute = iattribute.getParent())
             {
-                this.descendantsByParent.put(iattribute, attribute);
+                synchronized (descendantsByParent) {
+                    this.descendantsByParent.put(iattribute, attribute);
+                }
             }
 
             return iattributeinstance;
